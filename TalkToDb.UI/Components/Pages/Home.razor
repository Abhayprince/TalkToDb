@page "/"
@using System.Text.Json
@using TalkToDb.Shared

@inject IApi Api

<div class="vh-100 d-flex flex-column vh-100 container-fluid gap-3">
    <div class="flex-grow-1" style="overflow-y: auto">
        @foreach (var message in _messages)
        {
            var chatMessageClass = "";
            if(message.FromUser)
            {
                chatMessageClass = "bg-warning justify-content-end ms-auto";
            }
            else
            {
                chatMessageClass = "text-white justify-content-start me-auto ";

                chatMessageClass += message.IsSuccess ? " bg-success" : " bg-danger ";
                if(!message.IsSuccess && string.IsNullOrWhiteSpace(message.Message))
                {
                    message.Message = message.ErrorMessage ?? "Something went wrong";
                }
            }

            <div class="d-flex flex-column mb-3">
                <div class="@chatMessageClass px-3 py-1" style="max-width: 80%">
                    @message.Message             
                </div>
                @if (!message.FromUser)
                {
                    <TalkToDb.UI.Components.Shared.DisplayQueryResult Message="message" />
                }
            </div>
        }

        @if (_isFetching)
        {
            <div class="d-flex mb-3">
                <div class="justify-content-start me-auto px-3 py-1 text-white" style="max-width: 80%">
                    <div class="spinner-grow spinner-grow-sm text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="spinner-grow spinner-grow-sm text-secondary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="spinner-grow spinner-grow-sm text-success" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="spinner-grow spinner-grow-sm text-danger" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="spinner-grow spinner-grow-sm text-warning" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="spinner-grow spinner-grow-sm text-info" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="spinner-grow spinner-grow-sm text-light" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="spinner-grow spinner-grow-sm text-dark" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>

        }

    </div>
    <div class="d-flex align-items-center gap-1 pb-2">
        <input type="text" @bind="_message" class="form-control" placeholder="Ask anything to the database" @onkeypress="HandleInputKeyPress" />
        <button type="button" class="btn btn-info" @onclick="HandleAskAsync" disabled="@_isFetching">Ask</button>
    </div>
</div>

@code{
    private List<QueryResult> _messages = [];

    private bool _isFetching;

    private string _message = "";

    protected override async Task OnInitializedAsync()
    {
        //_queryResult = await Api.AskAsync("how many employees we have?");
    }

    private async Task HandleAskAsync()
    {
        if (string.IsNullOrWhiteSpace(_message))
            return;

        var userMessage = new QueryResult
            {
                FromUser = true,
                Message = _message
            };

        _messages.Add(userMessage);

        _message = "";
        _isFetching = true;
        QueryResult apiMessage = await Api.AskAsync(userMessage.Message);

        _isFetching = false;

        _messages.Add(apiMessage);
    }

    private Task HandleInputKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
            return HandleAskAsync();

        return Task.CompletedTask;
    }
}
